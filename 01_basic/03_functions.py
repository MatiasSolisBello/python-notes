# -*- coding: utf-8 -*-
"""Functions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16uUSStFiCXdwxYdD8LpHm_193m9nyvZB
"""

"""
Ejercicio 1

Escribir una función que muestre por pantalla el saludo ¡Hola amiga! cada vez
que se la invoque.
"""
def hello_friend():
    print('Hello Friend!')
    return;

hello_friend()
hello_friend()

"""
Ejercicio 2

Escribir una función a la que se le pase una cadena <nombre> y muestre por
pantalla el saludo ¡hola <nombre>!.
"""
def greeting(name):
    print(f'Hello {name}')
    return;

greeting('Oscar')

"""
Ejercicio 3

Escribir una función que reciba un número entero positivo y devuelva su factorial.
"""
def factorial(n):
    tmp = 1
    for i in range(n):
        tmp *= i+1
    return tmp

print(factorial(4))
print(factorial(20))

"""
Ejercicio 4

Escribir una función que calcule el total de una factura tras aplicarle el IVA.
La función debe recibir la cantidad sin IVA y el porcentaje de IVA a aplicar, y
devolver el total de la factura. Si se invoca la función sin pasarle el
porcentaje de IVA, deberá aplicar un 21%.
"""
def calculate_iva(amount):
    amount = amount * 1.19
    return amount

calculate_iva(15000)

"""
Ejercicio 5

Escribir una función que calcule el área de un círculo y otra que calcule el
volumen de un cilindro usando la primera función.
"""
def calculate_circle_area(radius):
    pi = 3.1415
    return pi*radius**2

def calculate_cylinder_area():
    return

"""
Ejercicio 6

Escribir una función que reciba una muestra de números en una lista y devuelva su media.
"""
def calculate_average(numbers):
    sum = 0
    counter = 0
    for i in numbers:
        counter += 1
        sum += i
    return sum/counter


calculate_average([10,20,20])

"""
Ejercicio 7

Escribir una función que reciba una muestra de números en una lista y devuelva
otra lista con sus cuadrados.
"""
def numbers_square(numbers):
    list_result = []
    for i in numbers:
        list_result.append(i*2)
    return list_result

numbers_square([2,6,12])

"""
Ejercicio 8

Escribir una función que reciba una muestra de números en una lista y devuelva
un diccionario con su media, varianza y desviación típica.
"""
def square(sample):
    list = []
    for i in sample:
        list.append(i**2)
    return list

def statistics(numbers):
    resume = {}
    resume['media'] = sum(numbers)/len(numbers)
    resume['varianza'] = sum(square(numbers))/len(numbers)-resume['media']**2
    resume['desviacion tipica'] = resume['varianza']**0.5
    return resume

statistics([25,12,19])